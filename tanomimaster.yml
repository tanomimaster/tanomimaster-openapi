openapi: 3.0.3
info:
  version: v3.9.12
  title: Tanomimaster REST API Specification
  description: |
    タノミマスターのREST APIサービスの仕様書です。
    APIの仕様策定は以下のレポジトリで行っています。
    [https://github.com/tanomimaster/tanomimaster-openapi](https://github.com/tanomimaster/tanomimaster-openapi).
    APIの実行にはAPIキーが必要です。小売、またはメーカの管理画面から取得できます。

    # 概要
    このAPI仕様書は **OpenAPI フォーマット** で記述されています。
    APIの種別は3つあります。
    - 小売り(発注者)向け
    - メーカ(受注者)向け
    - 共通

    サーバを通してこのドキュメントをプレビューしている場合は、このドキュメントにあるAPI仕様が実装されたバージョンのアプリケーションが稼働していることを担保されています。
    動作している環境によってバージョン番号が異なることがあると思いますのでご注意ください。

    <!--
    # Cross-Origin Resource Sharing
    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
    And that allows cross-domain communication from the browser.
    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.
    -->

    # 認証

    タノミマスターはAPIキーによる認証を提供しています。

  license:
    name: All Rights Reserved
  contact:
    name: Yuki Matsukura
    url: 'https://tanomimaster.freshdesk.com/support/tickets/new'
    email: support@tanomimaster.freshdesk.com
  x-logo:
    url: "https://tanomimaster.com/favicons/icon-256x256.png"
    backgroundColor: '#000000'
    altText: 'Tanomimaster'
servers:
  - url: 'https://development.tanomimaster.com/api/v1'
    description: 開発環境
  - url: 'https://staging.tanomimaster.com/api/v1'
    description: ステージング
  - url: 'https://tanomimaster.com/api/v1'
    description: 本番環境
paths:
  /retail/products:
    get:
      summary: 商品の一覧を取得
      operationId: getProducts
      description: Productの配列を取得
      tags:
        - Retail
      parameters:
        - name: limit
          in: query
          description: 項目数
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 25
            maximum: 100
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: string
          in: query
          name: maker_code
          description: ''
        - schema:
            type: string
          in: query
          name: product_code
      responses:
        '200':
          description: A paged array of products
          headers:
            X-Total-Pages:
              schema:
                type: integer
            X-Total:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Per-Page:
              schema:
                type: integer
            X-Page:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  '/retail/products/{product_id}':
    get:
      summary: 商品を取得
      operationId: showProductById
      description: Productを取得
      tags:
        - Retail
      parameters:
        - name: product_id
          in: path
          required: true
          description: ID
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
    parameters:
      - schema:
          type: integer
          default: 1
          minimum: 1
        name: product_id
        in: path
        description: 商品ID
        required: true
  /retail/orders:
    get:
      summary: 注文の一覧を取得
      operationId: getRetailOrders
      description: Orderの配列を取得
      tags:
        - Retail
      parameters:
        - name: limit
          in: query
          description: 項目数
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 25
            maximum: 100
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderWithDescendant'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
    post:
      summary: 注文を作成
      operationId: createOrder
      description: 注文を作成
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWithDescendant'
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForCreate'
            examples: {}
      tags:
        - Retail
  '/retail/orders/{order_code}':
    parameters:
      - schema:
          type: string
        name: order_code
        in: path
        required: true
    get:
      summary: 注文を取得
      operationId: getRetailOrder
      description: Orderを取得
      tags:
        - Retail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWithDescendant'
              examples: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  '/retail/orders/{order_code}/order_products':
    parameters:
      - schema:
          type: string
        name: order_code
        in: path
        required: true
    get:
      summary: 注文明細の一覧を取得
      tags:
        - Retail
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderProduct'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-orders-order_code-products
      description: list OrderProduct entities
      security:
        - ApiKeyAuth: []
    post:
      summary: 注文明細を変更する
      operationId: postRetailOrdersOrderCodeOrderProducts
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: post order_product
      tags:
        - Retail
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maker_code:
                  type: string
                code:
                  type: string
                number_of_items:
                  type: integer
                branch_number:
                  type: integer
                  description: 注文明細No
                shipping_postcode:
                  type: string
                shipping_prefecture_code:
                  type: integer
                shipping_city:
                  type: string
                shipping_street_address:
                  type: string
                shipping_building:
                  type: string
                shipping_office_name:
                  type: string
                shipping_tel:
                  type: string
                gas_type_id:
                  description: ガス種を選択する商品の場合、必須項目
                  type: integer
                  nullable: true
                memo:
                  type: string
                  nullable: true
              required:
                - maker_code
                - code
                - number_of_items
  '/retail/orders/{order_code}/order_products/{branch_number}':
    parameters:
      - schema:
          type: string
        name: order_code
        in: path
        required: true
      - schema:
          type: string
        name: branch_number
        in: path
        required: true
        description: 注文明細No
    get:
      summary: 注文明細を取得する
      tags:
        - Retail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-orders-order_code-products-order_product_code
      description: show OrderProduct entities corresponding to the id
      security:
        - ApiKeyAuth: []
    post:
      summary: 注文明細のステータスを変更する
      operationId: post-retail-orders-order_code-order_products-order_product_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
              examples:
                リクエストパラメータ不正:
                  value:
                    code: '400'
                    messages:
                      - 注文ステータスの値が不正です
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: 仕入納品または注文明細納品キャンセル、注文明細キャンセルを行う
      security:
        - ApiKeyAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order_status:
                  type: string
                  enum:
                    - delivered
                    - undelivered
                    - cancelled
            examples:
              仕入納品:
                value:
                  order_status: delivered
              注文明細納品キャンセル:
                value:
                  order_status: undelivered
              注文明細注文キャンセル:
                value:
                  order_status: cancelled
        description: ''
      tags:
        - Retail
  /retail/makers:
    get:
      deprecated: true
      summary: listMakers
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Maker'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: listMakers
      description: list Maker entities
      security:
        - ApiKeyAuth: []
      tags:
        - Retail
  '/retail/makers/{maker_id}':
    parameters:
      - schema:
          type: integer
        name: maker_id
        in: path
        required: true
    get:
      deprecated: true
      summary: showMaker
      tags:
        - Retail
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Maker'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: showMakerById
      description: Show Maker entity
      security:
        - ApiKeyAuth: []
  /retail/products/check_code:
    post:
      summary: checkProductExistence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductCheckCodeResponse'
              examples:
                normal response. returns availability and price.:
                  value:
                    - maker_code: rinnai
                      products:
                        - code: 12-10002
                          maker_price_for_retail_amount: 10000
                          maker_price_for_retail_currency: JPY
                          is_available: true
                        - code: 12-10003
                          maker_price_for_retail_amount: null
                          maker_price_for_retail_currency: null
                          is_available: true
                    - maker_code: paloma
                      products:
                        - code: '10002'
                          maker_price_for_retail_amount: 10000
                          maker_price_for_retail_currency: JPY
                          is_available: false
                        - code: '10003'
                          maker_price_for_retail_amount: null
                          maker_price_for_retail_currency: null
                          is_available: false
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
              examples:
                リクエストパラメータ不正:
                  value:
                    code: '400'
                    messages:
                      - 'メーカが存在しません(<MakerName>)'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: post-products-check
      description: Check the passed ids are existed in this system.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProductCheckCodeRequest'
            examples:
              example:
                value:
                  - maker_code: rinnai
                    product_code:
                      - 12-10001
                      - 12-10002
                  - maker_code: noritz
                    product_code:
                      - '190001'
                      - '190002'
        description: ''
      security:
        - ApiKeyAuth: []
      tags:
        - Retail
    parameters: []
  /retail/products/kumo:
    get:
      summary: 基幹システム連動用に商品一覧を取得
      parameters:
        - name: maker_code
          in: query
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          example: 2021/3/30 10:00:00
          description: 時刻の指定が無い場合は0:00:00になります
          schema:
            type: string
        - name: product_code
          in: query
          example: product-1
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductForKumo'
              examples:
                normal response. returns availability and price.:
                  value:
                    - maker_code: RN
                      product_code: 12-10002
                      internal_code: 12-10002
                      name: ｶﾞｽｷｭｳﾄｳｷ002
                      price_amount: 10000
                      maker_price_for_retail_amount: 8000
                      tax_division: 0
                      power_consumption: ""
                      horsepower: ""
                      start_date: 2021/01/20
                      use_gas_type_master: false
                    - maker_code: RN
                      product_code: 12-10003
                      internal_code: 12-10003
                      name: ｶﾞｽｷｭｳﾄｳｷ003
                      price_amount: 30000
                      maker_price_for_retail_amount: 20000
                      tax_division: 0
                      power_consumption: ""
                      horsepower: ""
                      start_date: 2021/01/20
                      use_gas_type_master: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
              examples:
                リクエストパラメータ不正:
                  value:
                    code: '400'
                    messages:
                      - 'メーカが存在しません(<MakerName>)'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-products-kumo
      description: products data format for kumo.
      security:
        - ApiKeyAuth: []
      tags:
        - Retail
  '/retail/retail_branches/{retail_branch_code}':
    parameters:
      - schema:
          type: string
        name: retail_branch_code
        in: path
        required: true
    get:
      deprecated: true
      summary: showRetailBranch
      operationId: showRetailsRetailBranchByCode
      description: 2022年9月1日以降のリリースで廃止予定`/master/retails/{retail_code}/retail_branches/{retail_branch_code}` を利用してください。
      tags:
        - Retail
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailBranch'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  /retail/retail_branches:
    parameters: []
    get:
      deprecated: true
      summary: listRetailBranches
      operationId: listRetailBranches
      description: 2022年8月で廃止予定`/master/retails/{retail_code}/retail_branches` を利用してください。
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RetailBranch'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - Retail
  /retail/retail_sales_offices:
    get:
      deprecated: true
      summary: listRetailSalesOffices
      operationId: listRetailSalesOffices
      description: 2022年9月1日以降のリリースで廃止予定`/master/retails/{retail_code}/retail_branches` を利用してください。
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RetailSalesOffice'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - Retail
    parameters: []
  '/retail/retail_sales_offices/{retail_sales_office_code}':
    get:
      deprecated: true
      summary: showRetailSalesOffice
      operationId: showRetailSalesOfficeByCode
      description: 2022年9月1日以降のリリースで廃止予定`/master/retails/{retail_code}/retail_branches/{sales_office_id}` を利用してください。
      tags:
        - Retail
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailSalesOffice'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
    parameters:
      - schema:
          type: string
        name: retail_sales_office_code
        in: path
        required: true
  '/retail/retail_users':
    get:
      summary: 自社小売りのユーザ一覧を取得
      operationId: getRetailUsers
      description: RetailUserの配列を取得
      tags:
        - Retail
      parameters:
        - schema:
            type: string
          name: retail_user_code
          in: query
          required: false
          description: 小売りユーザコード(完全一致)
          example: '0001'
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RetailUser'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
    post:
      summary: 自社小売りのユーザを一括更新
      operationId: updateRetailUsers
      description: RetailUserの配列をパラメータとして一括更新
      tags:
        - Retail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      user_code:
                        type: string
                      sales_office_code:
                        type: string
                      email:
                        type: string
                      password:
                        type: string
                      last_name:
                        type: string
                      first_name:
                        type: string
                      last_name_kane:
                        type: string
                      first_name_kana:
                        type: string
                      role:
                        type: string
                      tel:
                        type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        retail_user_code:
                          type: string
                        successful:
                          type: boolean
                        message:
                          type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/retail/retail_users/{retail_user_code}':
    parameters:
      - schema:
          type: string
        name: retail_user_code
        in: path
        required: true
    get:
      summary: 自社小売りのユーザを取得
      operationId: getRetailUser
      description: RetailUserを取得
      tags:
        - Retail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        error:
                          $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  '/retail/shipping_addresses':
    get:
      summary: 自社小売りの納品先一覧を取得
      operationId: getShippingAddresses
      description: ShippingAddressの配列を取得
      tags:
        - Retail
      responses:
        '200':
          description: OK
          headers:
            X-Total-Pages:
              schema:
                type: integer
            X-Total:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Per-Page:
              schema:
                type: integer
            X-Page:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ShippingAddress'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - schema:
            type: string
          name: retail_branch_code
          in: query
          required: false
          description: 小売り支店コード(完全一致)
          example: '0001'
        - schema:
            type: string
          name: retail_sales_office_code
          in: query
          required: false
          description: 小売り営業所コード(完全一致)
          example: '0001'
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      security:
        - ApiKeyAuth: []
  '/retail/shipping_addresses/{shipping_address_code}':
    parameters:
      - schema:
          type: string
        name: shipping_address_code
        in: path
        required: true
    get:
      summary: 自社小売りの納品先を取得
      operationId: getShippingAddress
      description: ShippingAddressを取得
      tags:
        - Retail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingAddress'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        error:
                          $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  /retail/retail_users/check_registrations:
    post:
      summary: 指定したユーザが存在するかをチェック
      operationId: checkRegistrationForRetailUser
      description: RetailUserの存在確認用
      tags:
        - Retail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        retail_user_code:
                          type: string
                          nullable: true
                        retail_sales_office_code:
                          type: string
                          nullable: true
                        registed:
                          type: boolean
                          nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                retail_user_codes:
                  type: array
                  items:
                    type: string
      security:
        - ApiKeyAuth: []
  /retail/orders/batch:
    post:
      summary: 一括で発注する
      operationId: post-retai-orders-batch
      description: OrderForCreateの配列を指定することにより一括で注文を作成する。
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/OrderWithDescendant'
                        - type: object
                          properties:
                            error:
                              $ref: '#/components/schemas/Errors'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        error:
                          $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderForCreate'
            examples:
              single product:
                value:
                  items:
                    - code: '2000000014'
                      example: '2022-06-06T18:32:35.956+09:00'
                      makers:
                        - maker_code: matsukura
                          shipping_postcode: "338-0824"
                          shipping_preferecture_code: "11"
                          shipping_city: "さいたま市桜区"
                          shipping_street_address: "上大久保８８８－５"
                          shipping_building: null
                          shipping_office_name: "日本瓦斯株式会社　浦和営業所"
                          shipping_tel: 048-854-1910
                          retail_user_code: matsukura-sales
                          retail_sales_office_code: '000'
                          desired_delivery_date: 2020-03-20
                          products:
                            - code: '000'
                              branch_number: 2
                              number_of_items: 3
                              gas_type_id: null
                              memo: 備考欄
      tags:
        - Retail
    parameters: []
  /categories:
    get:
      deprecated: true
      summary: カテゴリ一覧
      description: "`/master/categories`にエンドポイントが変更になります。"
      operationId: listCategoriesOld
      tags:
        - Common
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            multipart/form-data:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          headers:
            X-Next-Page:
              schema:
                type: integer
                nullable: true
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters: []
  '/categories/{category_id}':
    parameters:
      - schema:
          type: integer
        name: category_id
        in: path
        required: true
    get:
      deprecated: true
      summary: カテゴリ単体
      description: "`/master/category/{category_id}`にエンドポイントが変更になります。"
      operationId: getCategoryByIdOld
      tags:
        - Common
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /master/categories:
    get:
      summary: カテゴリ一覧
      description: Categoryエンティティの配列を返却
      operationId: listCategories
      tags:
        - Common
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            multipart/form-data:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters: []
  '/master/categories/{category_id}':
    parameters:
      - schema:
          type: integer
        name: category_id
        in: path
        required: true
    get:
      summary: カテゴリ単体
      description: Categoryエンティティの取得
      operationId: getCategoryById
      tags:
        - Common
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /master/delivery_companies:
    get:
      summary: 配送会社の一覧を取得
      operationId: getDeliveryCompanys
      description: DeliveryCompanyの配列を取得
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeliveryCompany'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - Common
    parameters: []
  '/master/delivery_companies/{delivery_company_id}':
    parameters:
      - schema:
          type: integer
        name: delivery_company_id
        in: path
        required: true
    get:
      summary: 配送会社を取得
      operationId: getDeliveryCompany
      description: DeliveryCompanyの取得
      tags:
        - Common
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryCompany'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  /master/gas_types:
    get:
      summary: ガス種の一覧を取得
      operationId: getGasTypes
      description: GasTypeの配列を取得
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/GasType'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - Common
    parameters: []
  '/master/gas_types/{gas_type_id}':
    parameters:
      - schema:
          type: integer
        name: gas_type_id
        in: path
        required: true
    get:
      summary: ガス種を取得
      operationId: getGasType
      description: GasTypeの取得
      tags:
        - Common
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GasType'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []

  /master/makers:
    get:
      summary: メーカの一覧を取得
      operationId: getMakers
      description: Makerの配列を取得
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Maker'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - Common
    parameters: []
  '/master/makers/{maker_code}':
    parameters:
      - schema:
          type: string
        name: maker_code
        in: path
        required: true
    get:
      summary: メーカを取得
      operationId: getMaker
      description: Makerの取得
      tags:
        - Common
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Maker'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  '/master/makers/{maker_code}/maker_branches':
    parameters:
      - schema:
          type: string
        name: maker_code
        in: path
        required: true
    get:
      summary: メーカの支店一覧を取得
      operationId: getMakerBranches
      description: MakerBranchの配列を取得
      tags:
        - Common
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MakerBranch'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  '/master/makers/{maker_code}/maker_branches/{maker_branch_code}':
    parameters:
      - schema:
          type: string
        name: maker_code
        in: path
        required: true
      - schema:
          type: string
        name: maker_branch_code
        in: path
        required: true
    get:
      summary: メーカの支店を取得
      operationId: getMakerBranch
      description: MakerBranchの取得
      tags:
        - Common
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MakerBranch'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  /master/makers/{maker_code}/maker_branches/{maker_branch_code}/maker_sales_offices:
    get:
      summary: メーカの営業所一覧の取得
      operationId: listMasterMakerSalesOffices
      description: MakerSalesOfficeの配列
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MakerSalesOffice'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - Common
    parameters:
      - schema:
          type: string
        name: maker_code
        in: path
        required: true
      - schema:
          type: string
        name: maker_branch_code
        in: path
        required: true
  '/master/makers/{maker_code}/maker_branches/{maker_branch_code}/maker_sales_offices/{maker_sales_office_code}':
    get:
      summary: メーカの営業所の取得
      operationId: showMasterMakerMakerSalesOfficeByCode
      description: MakerSalesOfficeの取得
      tags:
        - Common
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MakerSalesOffice'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
    parameters:
      - schema:
          type: string
        name: maker_code
        in: path
        required: true
      - schema:
          type: string
        name: maker_branch_code
        in: path
        required: true
      - schema:
          type: string
        name: maker_sales_office_code
        in: path
        required: true
  /master/retails:
    get:
      summary: 小売りの一覧を取得
      operationId: getRetails
      description: Retailの配列を取得
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Retail'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - Common
    parameters: []
  '/master/retails/{retail_code}':
    parameters:
      - schema:
          type: string
        name: retail_code
        in: path
        required: true
    get:
      summary: 小売りを取得
      operationId: getRetail
      description: Retailの取得
      tags:
        - Common
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Retail'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters: []
      security:
        - ApiKeyAuth: []
  '/master/retails/{retail_code}/retail_branches':
    parameters:
      - schema:
          type: string
        name: retail_code
        in: path
        required: true
    get:
      summary: 小売りの支店一覧を取得
      operationId: getRetailBranches
      description: RetailBranchの配列を取得
      tags:
        - Common
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RetailBranch'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  '/master/retails/{retail_code}/retail_branches/{retail_branch_code}':
    parameters:
      - schema:
          type: string
        name: retail_code
        in: path
        required: true
      - schema:
          type: string
        name: retail_branch_code
        in: path
        required: true
    get:
      summary: 小売りの支店を取得
      operationId: getRetailBranch
      description: RetailBranchの取得
      tags:
        - Common
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailBranch'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  /master/retails/{retail_code}/retail_branches/{retail_branch_code}/retail_sales_offices:
    get:
      summary: 小売りの営業所一覧の取得
      operationId: listMasterRetailSalesOffices
      description: RetailSalesOfficeの配列
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RetailSalesOffice'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - Common
    parameters:
      - schema:
          type: string
        name: retail_code
        in: path
        required: true
      - schema:
          type: string
        name: retail_branch_code
        in: path
        required: true
  '/master/retails/{retail_code}/retail_branches/{retail_branch_code}/retail_sales_offices/{retail_sales_office_code}':
    get:
      summary: 小売りの営業所の取得
      operationId: showMasterRetailRetailSalesOfficeByCode
      description: RetailSalesOfficeの取得
      tags:
        - Common
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailSalesOffice'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
    parameters:
      - schema:
          type: string
        name: retail_code
        in: path
        required: true
      - schema:
          type: string
        name: retail_branch_code
        in: path
        required: true
      - schema:
          type: string
        name: retail_sales_office_code
        in: path
        required: true
  /status:
    get:
      summary: ヘルスチェック用URL
      operationId: getStatus
      description: 稼働中のAPI仕様のバージョンを表示することと、ヘルスチェック用のエンドポイントです。
      tags:
        - Common
      responses:
        '200':
          description: Healthcheck OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                required:
                  - version
              examples:
                Example:
                  value:
                    version: 1.0.0
        '500':
          description: Healthcheck NG
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                required:
                  - version
              examples:
                Example:
                  value:
                    version: 1.0.0
  /maker/orders_makers:
    parameters: []
    get:
      summary: メーカ用 注文一覧取得
      tags:
        - Maker
      parameters:
        - name: is_confirmed
          in: query
          description: 受注確定している明細を含んでいる注文を取得するかどうか
          required: false
          schema:
            type: boolean
        - name: is_cancel_confirmed
          in: query
          description: キャンセル確定している明細を含んでいる注文を取得するかどうか
          required: false
          schema:
            type: boolean
          examples:
            including-cancel-confirmed:
              value: 'true'
              summary: 'キャンセル確定している明細を含んでいる注文と全明細を返却'
            excluding-cancel-confirmed:
              value: 'false'
              summary: 'キャンセル確定している明細を含んでいない注文と全明細を返却'
        - name: status
          in: query
          description: ステータス(0：納期未回答, 2：出荷待ち, 3：出荷済み, 4：納品完了, 99：キャンセル)
          required: false
          schema:
            type: integer
        - name: delivery_date_from
          in: query
          description: 納品日FROM(YYYY-MM-DD)
          required: false
          schema:
            type: string
        - name: delivery_date_to
          in: query
          description: 納品日TO(YYYY-MM-DD)
          required: false
          schema:
            type: string
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrdersMakerWithDescendant'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      operationId: listOrdersForMaker
      description: list orders
  /maker/orders_makers/{orders_maker_id}:
    parameters:
      - schema:
          type: string
        name: orders_maker_id
        in: path
        required: true
    get:
      summary: メーカ用 注文取得
      tags:
        - Maker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersMakerWithDescendant'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
      operationId: showAnOrderForMaker
      description: show an order
  '/maker/orders_makers/{orders_maker_id}/order_products':
    parameters:
      - schema:
          type: string
        name: orders_maker_id
        in: path
        required: true
    get:
      summary: 注文明細の一覧を取得
      operationId: getOrderProducts
      description: 指定された注文における
      tags:
        - Maker
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
          required: false
          description: ページ数
          example: 2
        - schema:
            type: integer
            minimum: 1
            default: 25
            maximum: 100
          name: limit
          in: query
          required: false
          description: 項目数
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderProduct'
          headers:
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
                nullable: true
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
                nullable: true
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  '/maker/orders_makers/{orders_maker_id}/order_products/{branch_number}':
    parameters:
      - schema:
          type: string
        name: orders_maker_id
        in: path
        required: true
      - schema:
          type: string
        name: branch_number
        in: path
        required: true
        description: 注文明細No
    get:
      summary: 注文明細を取得する
      tags:
        - Maker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: maker-get-orders-order_code-products-order_product_code
      description: show OrderProduct entities corresponding to the id
      security:
        - ApiKeyAuth: []
  /maker/orders_makers/{orders_maker_id}/order_products/{branch_number}/confirm:
    parameters:
      - schema:
          type: string
        name: orders_maker_id
        in: path
        required: true
      - schema:
          type: string
        name: branch_number
        in: path
        required: true
        description: 注文明細No
    post:
      summary: メーカ用 受注確定
      operationId: confirm-order
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: confirm order
      tags:
        - Maker
      security:
        - ApiKeyAuth: []
  /maker/orders_makers/{orders_maker_id}/order_products/{branch_number}/cancel:
    parameters:
      - schema:
          type: string
        name: orders_maker_id
        in: path
        required: true
      - schema:
          type: string
        name: branch_number
        in: path
        required: true
        description: 注文明細No
    post:
      summary: メーカ用 枝番キャンセル
      operationId: makerCancelOrderProduct
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: confirm order
      tags:
        - Maker
      security:
        - ApiKeyAuth: []

  /maker/orders_makers/{orders_maker_id}/order_products/{branch_number}/update_delivery_date:
    parameters:
      - schema:
          type: string
        name: orders_maker_id
        in: path
        required: true
        description: 注文番号
      - schema:
          type: string
        name: branch_number
        in: path
        required: true
        description: 注文明細No
    post:
      summary: メーカ用 納期回答
      operationId: answer-delivery-date
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                official_estimated_delivery_date:
                  type: string
                  format: date
                  description: 納期日(YYYY-MM-DD)
                  example: '2022-06-03'
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: 納期回答を行います。納期日が変更になった場合にもこちらのエンドポイントを再度利用してください。
      tags:
        - Maker
      security:
        - ApiKeyAuth: []
  /maker/orders_makers/{orders_maker_id}/order_products/{branch_number}/ship:
    parameters:
      - schema:
          type: string
        name: orders_maker_id
        in: path
        required: true
        description: 注文番号
      - schema:
          type: string
        name: branch_number
        in: path
        required: true
        description: 注文明細No
      - schema:
          type: integer
        name: delivery_company_id
        in: query
        required: false
        description: 配送業者ID
      - schema:
          type: string
        name: shipping_slip_number
        in: query
        required: false
        description: 配送伝票番号
    post:
      summary: 配送済みにステータスを変更
      operationId: shipped
      description: 配送済みにステータスを変更。オプションのパラメータによって配送業者と配送伝票番号を登録できる。
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Maker
      security:
        - ApiKeyAuth: []
  /maker/orders_makers/{orders_maker_id}/order_products/{branch_number}/confirm_cancel:
    parameters:
      - schema:
          type: string
        name: orders_maker_id
        in: path
        required: true
        description: 注文番号
      - schema:
          type: string
        name: branch_number
        in: path
        required: true
        description: 注文明細No
    post:
      summary: メーカ用 キャンセル受注確定
      operationId: confirm-cancel-order
      description: キャンセル処理を受け付けたことを通知
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Maker
      security:
        - ApiKeyAuth: []
components:
  schemas:
    Product:
      title: Product
      type: object
      xml:
        name: Product
      x-tags:
        - product
      description: A single product.
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: '商品ID'
        disabled_at:
          type: string
          format: date-time
          nullable: true
          example: '2022-06-06T18:32:35.956+09:00'
        estimated_delivery_duration:
          type: integer
          nullable: true
          description: '目安納期日数'
          example: 3
        use_gas_type_master:
          type: boolean
          nullable: true
          description: 'ガス種の選択を必要とするか'
          example: true
        maker_id:
          type: integer
          description: 'メーカID'
          example: 1
        status:
          type: string
          description: '商品ステータス'
          example: 'available'
          enum:
            - available
            - pending
            - sold
        internal_code:
          type: string
          nullable: true
          description: 'メーカ内部コード'
          example: '000-111'
        name:
          type: string
          description: '商品名'
          example: 商品A
        category_id:
          type: integer
          description: カテゴリID
          example: 1
        maker_code:
          type: string
          description: メーカコード
          example: '0001'
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - id
        - name
        - category_id
    ProductForKumo:
      title: Product for kumo
      type: object
      xml:
        name: Product
      x-tags:
        - product
      description: A single product.
      properties:
        maker_code:
          type: string
          description: 雲の宇宙船内で利用されているメーカコード
          example: 'RN'
        product_code:
          type: string
          example: '111-222-333-444'
          description: '型式（品番）'
        internal_code:
          type: string
          description: 'メーカ内部コード'
          example: '12-10002'
        name:
          type: string
          description: '商品名'
          example: '商品A'
        price_amount:
          type: integer
          description: 'メーカ希望小売価格(税抜)'
          example: 10000
        maker_price_for_retail_amount:
          type: integer
          description: '仕入れ値'
          example: 8000
        tax_division:
          type: integer
          description: '0固定(課税対象)'
          example: 0
        power_consumption:
          type: string
          description: '空文字固定'
          example: ''
        horsepower:
          type: string
          description: '空文字固定'
          example: ''
        start_date:
          type: string
          description: 取り扱い開始日(YYYY/MM/DD)
          example: '2021/01/20'
        use_gas_type_master:
          type: boolean
          description: ガス種の指定が必須かどうか
          example: true
      required:
        - maker_code
        - product_code
        - name
        - maker_price_for_retail_amount
        - tax_division
        - power_consumption
        - horsepower
        - start_date
        - use_gas_type_master
    DeliveryCompany:
      title: DeliveryCompany
      type: object
      description: 配送会社
      properties:
        id:
          type: integer
          example: 1
          description: '配送会社ID'
        name:
          type: string
          description: '配送会社名'
          example: 'ヤマト急便'
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - id
        - name
      x-tags:
        - delivery_company
    GasType:
      title: GasType
      type: object
      description: ガス種
      properties:
        id:
          type: integer
          example: 1
          description: 'ガス種ID'
        name:
          type: string
          description: 'ガス種名'
          example: 'LP'
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - id
        - name
      x-tags:
        - delivery_company
    Maker:
      title: Maker
      type: object
      description: メーカ
      properties:
        code:
          type: string
          description: 'メーカコード'
          example: 'maker'
        name:
          type: string
          description: 'メーカ名'
          example: 'XXXXメーカ'
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - code
        - name
      x-tags:
        - maker
    MakerBranch:
      title: MakerBranch
      description: 'メーカの支店'
      type: object
      properties:
        code:
          type: string
          description: 'メーカ支店コード'
          example: 'maker_branch'
        name:
          type: string
          description: 'メーカ支店名'
          example: 'XXXX支店'
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          example: '2022-06-06T18:32:35.956+09:00'
          description: 'レコード更新日時'
      required:
        - code
        - name
      x-tags:
        - maker
    MakerSalesOffice:
      title: MakerSalesOffice
      description: メーカの営業所
      type: object
      properties:
        code:
          type: string
          description: 'メーカ営業所コード'
          example: 'maker_sales_office'
        name:
          type: string
          description: 'メーカ営業所名'
          example: 'XXXX営業所'
        postcode:
          type: string
          description: 'メーカ営業所郵便番号'
        prefecture_code:
          type: integer
          description: 'メーカ営業所都道府県コード'
        prefecture:
          type: string
          description: 'メーカ営業所都道府県'
        city:
          type: string
          description: 'メーカ営業所市区町村'
        street_address:
          type: string
          description: 'メーカ営業所番地以降の住所'
        tel:
          type: string
          nullable: true
          description: 'メーカ営業所番電話番号'
        fax:
          type: string
          nullable: true
          description: 'メーカ営業所番FAX番号'
        created_at:
          nullable: true
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - code
        - name
      x-tags:
        - Maker
    MakerUser:
      title: MakerUser
      description: 'メーカのユーザ'
      type: object
      properties:
        id:
          type: integer
          description: 'メーカユーザーID'
          example: 1
        code:
          type: string
          description: 'メーカユーザーコード'
          example: 'maker_user'
        email:
          type: string
          format: email
          description: 'メーカユーザーメールアドレス'
          example: 'foo@example.com'
        role:
          type: string
          enum:
            - admin
            - general
            - clerk
            - sales
          description: '権限(clerkとsalesは削除予定。clerkとsalesを指定した場合はgeneralとして登録されます。'
          example: 'admin'
        last_name:
          type: string
          description: '姓'
          example: '山田'
        first_name:
          type: string
          description: '名'
          example: '太郎'
        last_name_kane:
          type: string
          description: '姓(かな)'
          example: 'やまだ'
        first_name_kana:
          type: string
          description: '名(かな)'
          example: 'たろう'
        tel:
          type: string
          description: '電話番号'
          nullable: true
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - id
        - code
      x-tags:
        - Maker
    Category:
      title: Category
      type: object
      x-examples:
        example-1: {}
      x-tags:
        - product
      description: 'カテゴリ'
      properties:
        id:
          type: integer
          format: int64
        ancestry_depth:
          type: integer
        ancestry:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
        name:
          type: string
        disabled_at:
          type: string
          format: date-time
          nullable: true
      required:
        - id
        - name
    Error:
      title: Error
      type: object
      description: A standard error object.
      x-tags:
        - common
      properties:
        code:
          type: string
          description: 'エラーコード'
          example: '500'
        message:
          type: string
          description: 'エラーメッセージ'
          example: 'サーバ内でエラーが発生しました'
      required:
        - code
        - message
      x-examples:
        認証失敗:
          code: '401'
          message: 認証に失敗しました
        実行権限がない:
          code: '403'
          message: APIを実行する権限がありません
        注文番号重複エラー:
          code: '409'
          message: 注文番号190123456789はすでに存在しています
        注文が見つからない:
          code: '404'
          message: 注文が見つかりませんでした
        サーバエラー:
          code: '500'
          message: 'APIサーバーでエラーが発生しました. <アプリケーションのエラーメッセージ> <発生時刻> <リクエストID>'
    OrderProduct:
      title: OrderProduct
      type: object
      x-tags:
        - order
      description: '注文明細'
      properties:
        id:
          type: string
          description: 'ID'
          example: 'Z2lkOi8vdGFub21pbWFzdGVyLXd3dy9PcmRlclByb2R1Y3QvMQ'
        orders_maker_id:
          type: string
          description: 'OrdersMakerの外部キー'
          example: 'Z2lkOi8vdGFub21pbWFzdGVyLXd3dy9PcmRlclByb2R1Y3QvMQ'
        product_id:
          type: integer
          description: 'ProductのID'
          example: 1
        gas_type_id:
          description: 'ガス種を選択する商品の場合、必須項目(1: LP, 2: 12・13A)'
          type: integer
          nullable: true
          example: 1
        name:
          type: string
          description: 商品名
          example: '商品A'
        code:
          type: string
          description: 注文明細
          example: '2200059944'
        branch_number:
          type: integer
          description: 注文明細No
          example: '5d25c1884ee2f597047be83d11'
        internal_code:
          type: string
          nullable: true
          description: メーカ内部コード
          example: '12-10002'
        price_amount:
          type: integer
          nullable: true
          description: 定価
          example: 100000
        price_currency:
          type: string
          nullable: true
          description: 通貨
          example: 'JPY'
        maker_price_for_retail_amount:
          type: integer
          description: メーカの卸値
          example: 90000
        maker_price_for_retail_currency:
          type: string
          description: メーカの卸値（通貨）
          example: 'JPY'
        subtotal_excluding_tax:
          type: integer
          description: 税抜小計
          example: 90000
        estimated_delivery_duration:
          type: integer
          description: 目安納期日数
          example: 3
        shipping_status:
          type: string
          nullable: true
          enum:
            - undelivered
            - delivered
          description: 配送ステータス
          example: undelivered
        delivery_date:
          type: string
          nullable: true
          format: date
          description: 納期目安
          example: '2022-06-03'
        number_of_items:
          type: integer
          description: 個数
          example: 1
        cancelled_at:
          type: string
          nullable: true
          description: 仕入納品APIでキャンセルした場合、キャンセル日時を設定
          format: date-time
          example: '2022-06-03'
        shipping_postcode:
          type: string
          nullable: true
          description: 郵便番号
          example: '1060031'
        shipping_prefecture_code:
          type: integer
          nullable: true
          description: 都道府県
          example: '東京都'
        shipping_city:
          type: string
          nullable: true
          description: 市区町村
          example: '渋谷区'
        shipping_street_address:
          type: string
          nullable: true
          description: 番地・号
          example: '代々木1-1-1'
        shipping_building:
          type: string
          nullable: true
          description: 建物名
          example: 'テスト建物101'
        shipping_office_name:
          type: string
          nullable: true
          description: 営業所名
          example: 'テスト営業所'
        shipping_tel:
          type: string
          nullable: true
          description: 電話番号
          example: '03-0000-0000'
        estimated_delivery_date:
          type: string
          nullable: true
          format: date
          description: 納期目安
          example: '2022-06-03'
        official_estimated_delivery_date:
          type: string
          nullable: true
          format: date
          description: 納期回答
          example: '2022-06-03'
        answered_at:
          type: string
          nullable: true
          format: date-time
          description: 納期回答日時
        order_status:
          type: string
          enum:
            - ordered
            - answered
            - shipped
            - delivered
            - cancelled
          description: 注文明細ステータス
          example: 'ordered'
        memo:
          type: string
          nullable: true
          description: 備考
          example: 'メモメモ'
        order_confirmed_at:
          type: string
          nullable: true
          format: date-time
          description: 注文受付日時
        cancel_confirmed_at:
          type: string
          nullable: true
          format: date-time
          description: キャンセル注文受付日時
        shipping_slip_number:
          description: 配送伝票番号
          nullable: true
          type: string
        delivery_company_id:
          description: 配送業者ID
          nullable: true
          type: integer
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - id
        - orders_maker_id
        - product_id
        - name
        - code
        - branch_number
    Order:
      title: Order
      type: object
      description: '注文'
      x-tags:
        - order
      x-examples:
        example-1: {}
      properties:
        id:
          type: string
          description: ID
          example: '5d25c1884ee2f597047be83d11'
        retail_id:
          type: integer
          description: Retailの外部キー
          example: 1
          deprecated: true
        retail_code:
          type: string
          description: Retailのcode
          example: 'retail_code'
        code:
          type: string
          description: 注文ID
          example: '5d25c1884ee2f597047be83d11'
        memo:
          type: string
          description: 注文に対する備考
          nullable: true
          example: 'メモメモ'
        ordered_at:
          type: string
          format: date-time
          description: '発注日時'
          example: '2022-06-06T18:32:35.956+09:00'
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - id
        - retail_code
        - code
    Retail:
      title: Retail
      description: 小売り
      type: object
      properties:
        name:
          type: string
          description: 小売り名
          example: '小売'
        code:
          type: string
          description: コード
          example: '001'
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - name
        - code
    RetailBranch:
      title: RetailBranch
      description: 小売りの支店
      type: object
      properties:
        code:
          type: string
          description: '小売り支店コード'
          example: '001'
        name:
          type: string
          description: '小売り支店名'
          example: '小売り支店'
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - code
        - name
      x-tags:
        - retail
    RetailSalesOffice:
      title: RetailSalesOffice
      description: 小売りの営業所
      type: object
      properties:
        code:
          type: string
          description: '小売り営業所コード'
        name:
          type: string
          description: '小売り営業所名'
          example: 'XXX営業所'
        postcode:
          type: string
          description: '小売り営業所郵便番号'
        prefecture_code:
          type: integer
          description: '小売り営業所都道府県コード'
        prefecture:
          type: string
          description: '小売り営業所都道府県'
        city:
          type: string
          description: '小売り営業所市区町村'
        street_address:
          type: string
          description: '小売り営業所番地以降の住所'
        tel:
          type: string
          nullable: true
          description: '小売り営業所番電話番号'
        fax:
          type: string
          nullable: true
          description: '営業所番FAX番号'
        created_at:
          nullable: true
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - code
        - name
      x-tags:
        - retail
    RetailUser:
      title: RetailUser
      description: 小売りのユーザ
      type: object
      properties:
        id:
          type: integer
          description: 小売りユーザID
          example: 1
        code:
          type: string
          description: 小売りユーザコード
          example: '0001'
        email:
          type: string
          format: email
          description: '小売りユーザーメールアドレス'
          example: 'foo@example.com'
        role:
          type: string
          enum:
            - admin
            - general
            - clerk
            - sales
          description: '権限(clerkとsalesは削除予定。clerkとsalesを指定した場合はgeneralとして登録されます。'
          example: 'admin'
        last_name:
          type: string
          description: '姓'
          example: '山田'
        first_name:
          type: string
          description: '名'
          example: '太郎'
        last_name_kane:
          type: string
          description: '姓(かな)'
          example: 'やまだ'
        first_name_kana:
          type: string
          description: '名(かな)'
          example: 'たろう'
        tel:
          type: string
          description: '電話番号'
          nullable: true
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - id
        - code
      x-tags:
        - retail
    ShippingAddress:
      title: ShippingAddress
      description: 納品先住所
      type: object
      properties:
        retail_branch_code:
          type: string
          description: RetailBranchのcode
          example: 'retail_branch_code'
        retail_sales_office_code:
          type: string
          description: RetailSalesOfficeのcode
          example: 'retail_sales_office_code'
        code:
          type: string
          description: 納品先住所コード
          example: '0001'
        name:
          type: string
          description: '納品先名'
          example: 'xxxx株式会社 xxx営業所'
        postcode:
          type: string
          description: '小売り営業所郵便番号'
          example: '111-1111'
        prefecture_code:
          type: integer
          description: '小売り営業所都道府県コード'
          example: 1
        prefecture:
          type: string
          description: '小売り営業所都道府県'
          example: '東京都'
        city:
          type: string
          description: '小売り営業所市区町村'
          example: '渋谷区'
        street_address:
          type: string
          description: '小売り営業所番地以降の住所'
          example: '代々木1-1-1'
        building:
          type: string
          nullable: true
          description: 建物名
          example: 'テスト建物101'
        tel:
          type: string
          description: '電話番号'
          nullable: true
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
      required:
        - code
        - name
      x-tags:
        - retail
    OrdersMaker:
      title: OrdersMaker
      description: メーカごとの注文
      x-tags:
        - retail
        - maker
      type: object
      properties:
        id:
          type: string
          description: メーカごとの注文ID。orders_maker_id
          example: 'Z2lkOi8vdGFub21pbWFzdGVyLXd3dy9PcmRlcnNNYWtlci8xOQ'
        maker_id:
          type: integer
          description: 'Makerの外部キー'
          example: 1
          deprecated: true
        maker_code:
          type: string
          description: 'Makerのcode'
          example: '0001'
        maker_user_id:
          type: integer
          description: 'MakerUserの外部キー'
          example: 1
          deprecated: true
        maker_user_code:
          type: integer
          description: 'MakerUserのcode'
          example: 1
        maker_sales_office_id:
          type: integer
          description: 'MakerSalesOfficeの外部キー'
          example: 1
          deprecated: true
        maker_sales_office_code:
          type: string
          description: 'MakerSalesOfficeのcode'
          example: 'code'
        retail_user_id:
          type: integer
          description: 'RetailUserの外部キー'
          example: 1
          deprecated: true
        retail_user_code:
          type: string
          description: 'RetailUserのcode'
          example: 'code'
        retail_sales_office_id:
          type: integer
          description: 'RetailSalesOfficeの外部キー'
          example: 1
          deprecated: true
        retail_sales_office_code:
          type: string
          description: 'RetailSalesOfficeのcode'
          example: 'retail_sales_office_code'
        code:
          type: string
          description: '注文コード（重複可能性あり）'
          example: '73445180582331397080'
        status:
          type: string
          enum:
            - ordered
            - answered
            - shipped
            - delivered
            - cancelled
          description: 'ステータス'
          example: 'ordered'
        created_at:
          type: string
          format: date-time
          description: 'レコード作成日時'
          example: '2022-06-06T18:32:35.956+09:00'
        updated_at:
          type: string
          format: date-time
          description: 'レコード更新日時'
          example: '2022-06-06T18:32:35.956+09:00'
        desired_delivery_date:
          type: string
          format: date
          description: "希望納期日。指定しない場合、タノミマスター算出する納期目安を設定。(フォーマット: `yyyy-mm-dd`)"
          example: '2022-06-09'
      required:
        - id
        - maker_code
    Errors:
      title: Errors
      type: object
      x-examples: {}
      properties:
        code:
          type: string
        messages:
          type: array
          items:
            type: string
      required:
        - code
        - messages
      description: 'バリデーションエラーなど複数エラーメッセージがある場合'
      x-tags:
        - common
    OrderForCreate:
      title: OrderForCreate
      type: object
      description: ''
      x-tags:
        - order
      x-examples:
        example:
          code: '2000000014'
          example: '2022-06-06T18:32:35.956+09:00'
          makers:
            - maker_code: '1'
              shipping_postcode: null
              shipping_prefecture_code: 15
              shipping_city: null
              shipping_street_address: 埼玉県さいたま市桜区上大久保８８８－５
              shipping_building: null
              shipping_office_name: 日本瓦斯株式会社　浦和営業所
              shipping_tel: 048-854-1910
              retail_user_code: '01210'
              retail_sales_office_code: '00022'
              desired_delivery_date: 2020/03/10
              products:
                - code: 60S W N300
                  branch_number: 1
                  number_of_items: 3
                  gas_type_id: null
                  memo: 備考欄
      properties:
        code:
          type: string
          description: 注文番号
        makers:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              maker_code:
                type: string
              products:
                type: array
                minItems: 1
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    branch_number:
                      type: integer
                      description: 注文明細No。指定しない場合、タノミマスターで自動発番
                    number_of_items:
                      type: integer
                      minimum: 1
                    gas_type_id:
                      description: ガス種を選択する商品の場合、必須項目
                      type: integer
                      nullable: true
                    memo:
                      type: string
                  required:
                    - code
                    - number_of_items
              code:
                type: string
                description: order code per maker
              retail_sales_office_code:
                type: string
              retail_user_code:
                type: string
              desired_delivery_date:
                type: string
                format: date
                description: 希望納期. 指定しない場合、タノミマスター算出する納期目安を設定
              shipping_postcode:
                type: string
              shipping_city:
                type: string
              shipping_street_address:
                type: string
              shipping_building:
                type: string
              shipping_office_name:
                type: string
              shipping_tel:
                type: string
              shipping_prefecture_code:
                type: integer
            required:
              - maker_code
              - retail_user_code
      required:
        - code
    ProductCheckCodeRequest:
      title: ProductCheckCodeRequest
      type: object
      description: POST /products/check_code Request
      properties:
        maker_code:
          type: string
        product_code:
          type: array
          items:
            type: string
      required:
        - maker_code
        - product_code
      x-tags:
        - product
      x-examples:
        example:
          items:
            - maker_code: maker01
              product_code:
                - '111'
                - '222'
            - maker_code: maker02
              product_code:
                - '333'
                - '444'
    ProductCheckCodeResponse:
      title: ProductCheckCodeResponse
      type: object
      x-examples:
        example:
          maker_code: rinnai
          products:
            - code: 12-10002
              maker_price_for_retail_amount: 10000
              maker_price_for_retail_currency: JPY
              is_available: true
            - code: 12-10003
              maker_price_for_retail_amount: null
              maker_price_for_retail_currency: null
              is_available: false
      properties:
        maker_code:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              maker_price_for_retail_amount:
                type: integer
                nullable: true
                description: '定価。nullの場合はオープンプライス。'
              maker_price_for_retail_currency:
                type: string
                nullable: true
                description: '定価の通貨。ISO 4217。nullの場合はオープンプライス。'
              is_available:
                type: boolean
                description: The product is on sale or not
            required:
              - code
      required:
        - maker_code
        - products
      description: POST /products/check_code Response
    OrderWithDescendant:
      allOf:
        - $ref: '#/components/schemas/Order'
        - type: object
          properties:
            orders_makers:
              type: array
              items:
                $ref: '#/components/schemas/OrdersMakerWithDescendant'
      title: OrderWithDescendant
    OrdersMakerWithDescendant:
      allOf:
        - $ref: '#/components/schemas/OrdersMaker'
        - type: object
          properties:
            order_products:
              type: array
              items:
                $ref: '#/components/schemas/OrderProduct'
            order:
              $ref: '#/components/schemas/OrderWithDescendant'
            retail_user:
              $ref: '#/components/schemas/RetailUser'
            sales_office:
              $ref: '#/components/schemas/RetailSalesOffice'
      title: OrdersMakerWithDescendant
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: Bearer
      description: 管理者権限で管理画面にログインし、左側のメニューから「APIキーの確認」を選んでください。
