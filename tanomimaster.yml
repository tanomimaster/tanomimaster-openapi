openapi: 3.0.0
info:
  version: 0.0.9
  title: REST API for makers
  description: Main file of Maker REST API.
  license:
    name: All Rights Reserved
  contact:
    name: Yuki Matsukura
    url: 'https://tanomimaster.freshdesk.com/support/tickets/new'
    email: support@tanomimaster.freshdesk.com
servers:
  - url: 'https://develop.tanomimaster.minedia.com/api/v1'
    description: Development
  - url: 'https://staging.tanomimaster.minedia.com/api/v1'
    description: Staging
  - url: 'https://tanomimaster.minedia.com/api/v1'
    description: Production
paths:
  /retail/products:
    get:
      summary: List products
      operationId: listProducts
      tags:
        - products
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - schema:
            type: string
          in: query
          name: maker_code
          description: ''
        - schema:
            type: string
          in: query
          name: product_code
      responses:
        '200':
          description: A paged array of products
          headers:
            X-Total-Pages:
              schema:
                type: integer
            X-Total:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Page:
              schema:
                type: integer
            X-Next-Page:
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: list OrderProduct entities
      security:
        - API Key: []
    parameters: []
  '/retail/products/{product_id}':
    get:
      summary: show Product
      operationId: showProductById
      tags:
        - products
      parameters:
        - name: product_id
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - API Key: []
    parameters:
      - schema:
          type: integer
          default: '1'
          maximum: 0
          minimum: 1
        name: product_id
        in: path
        description: 商品ID
        required: true
  /retail/orders:
    parameters: []
    get:
      summary: list orders
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          headers:
            X-Next-Page:
              schema:
                type: integer
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - API Key: []
      operationId: listOrders
    post:
      summary: list orders
      operationId: createOrder
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: createOrder
      security:
        - API Key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                makers:
                  type: array
                  items:
                    type: object
                    properties:
                      maker_code:
                        type: string
                      products:
                        type: object
                        properties:
                          code:
                            type: string
                          number_of_items:
                            type: integer
                        required:
                          - code
                          - number_of_items
                    required:
                      - maker_code
                retail_user_code:
                  type: string
                ordered_at:
                  type: string
                  format: date
                desired_delivery_date:
                  type: string
                  format: date
              required:
                - retail_user_code
  '/retail/orders/{order_id}':
    parameters:
      - schema:
          type: integer
        name: order_id
        in: path
        required: true
    get:
      summary: show an order
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - API Key: []
      operationId: showOrderById
      description: ''
  '/retail/orders/{order_id}/order_products':
    parameters:
      - schema:
          type: integer
        name: order_id
        in: path
        required: true
    get:
      summary: listOrderProducts
      tags:
        - Orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderProduct'
          headers:
            X-Next-Page:
              schema:
                type: integer
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-orders-order_id-products
      description: list OrderProduct entities
      security:
        - API Key: []
    post:
      summary: ''
      operationId: post-orders-order_id-products
      responses:
        '201':
          description: Created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - API Key: []
  '/retail/orders/{order_id}/order_products/{order_product_id}':
    parameters:
      - schema:
          type: string
        name: order_id
        in: path
        required: true
      - schema:
          type: string
        name: order_product_id
        in: path
        required: true
    get:
      summary: showOrderProduct
      tags:
        - Orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-orders-order_id-products-order_product_id
      description: show OrderProduct entities corresponding to the id
      security:
        - API Key: []
    delete:
      summary: cancelOrderProduct
      tags:
        - Orders
      responses:
        '200':
          description: OK
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: delete-orders-order_id-products-order_product_id
      description: 仕入納品をキャンセルする
      security:
        - API Key: []
    post:
      summary: ''
      operationId: post-orders-order_id-products-order_product_id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProduct'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: 仕入納品を行う
      security:
        - API Key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order_staus:
                  type: string
                  enum:
                    - cancelled
  /makers:
    get:
      summary: listMakers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Maker'
          headers:
            X-Next-Page:
              schema:
                type: integer
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: listMakers
      description: list Maker entities
      security:
        - API Key: []
      tags:
        - Makers
    parameters: []
  '/makers/{maker_id}':
    parameters:
      - schema:
          type: integer
        name: maker_id
        in: path
        required: true
    get:
      summary: showMaker
      tags:
        - Makers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Maker'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: showMakerById
      parameters: []
      description: Show Maker entity
      security:
        - API Key: []
  /retail/products/check_code:
    post:
      summary: checkProductExistence
      tags:
        - Orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    description: product code?
                    items:
                      type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: post-products-check
      description: Check the passed ids are existed in this system.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_code:
                  type: array
                  items:
                    type: string
                maker_code:
                  type: string
              required:
                - product_code
                - maker_code
      security:
        - API Key: []
    parameters: []
  /categories:
    get:
      summary: listCategories
      tags:
        - Common
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            multipart/form-data:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          headers:
            X-Next-Page:
              schema:
                type: integer
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - API Key: []
      operationId: listCategories
    parameters: []
  '/categories/{category_id}':
    parameters:
      - schema:
          type: integer
        name: category_id
        in: path
        required: true
    get:
      summary: show the category
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-category-category_id
      description: ''
  '/retail/retail_branches/{retail_branch_id}':
    get:
      summary: showRetailBranch
      tags:
        - RetailBranches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailBranch'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: showRetailBranchById
      parameters: []
      description: Show RetailBranch entity
      security:
        - API Key: []
    parameters:
      - schema:
          type: integer
        name: retail_branch_id
        in: path
        required: true
  /retail/retail_branches:
    get:
      summary: listRetailBranches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetailBranch'
          headers:
            X-Next-Page:
              schema:
                type: integer
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: listRetailBranches
      description: list listRetailBranch entities
      security:
        - API Key: []
      tags:
        - RetailBranches
    parameters: []
  /retail/retail_sales_offices:
    get:
      summary: listRetailSalesOffices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetailSalesOffice'
          headers:
            X-Next-Page:
              schema:
                type: integer
            X-Page:
              schema:
                type: integer
            X-Per-Page:
              schema:
                type: integer
            X-Prev-Page:
              schema:
                type: integer
            X-Total:
              schema:
                type: integer
            X-Total-Pages:
              schema:
                type: integer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: listRetailSalesOffices
      description: list listRetailSalesOffice entities
      security:
        - API Key: []
      tags:
        - RetailSalesOffices
    parameters: []
  '/retail/retail_sales_offices/{retail_sales_office_id}':
    get:
      summary: showRetailSalesOffice
      tags:
        - RetailSalesOffices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailSalesOffice'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: showRetailSalesOfficeById
      parameters: []
      description: Show RetailSalesOffice entity
      security:
        - API Key: []
    parameters:
      - schema:
          type: integer
        name: retail_sales_office_id
        in: path
        required: true
components:
  schemas:
    Product:
      title: Product
      type: object
      xml:
        name: Product
      x-tags:
        - Products
      description: A single product.
      properties:
        id:
          type: integer
          format: int64
        created_at:
          type: string
        updated_at:
          type: string
          format: date-time
        disabled_at:
          type: string
          format: date-time
        estimated_delivery_duration:
          type: integer
        use_gas_type_master:
          type: boolean
        maker_id:
          type: integer
        status:
          type: string
          description: product status in the store
          enum:
            - available
            - pending
            - sold
        internal_code:
          type: string
        name:
          type: string
          example: doggie
        category_id:
          type: integer
      required:
        - id
        - name
        - category_id
    Maker:
      title: Maker
      type: object
      description: A maker
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - code
        - name
    Category:
      title: Category
      type: object
      x-examples:
        example-1: {}
      x-tags:
        - Products
      description: ''
      properties:
        id:
          type: integer
          format: int64
        ancestry_depth:
          type: integer
        ancestry:
          type: string
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        name:
          type: string
        disabled_at:
          type: string
          format: date-time
      required:
        - id
        - name
    Error:
      title: Error
      type: object
      description: A standard error object.
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
      x-tags:
        - Common
    OrderProduct:
      title: OrderProduct
      type: object
      x-tags:
        - Orders
      properties:
        id:
          type: integer
        orders_maker_id:
          type: integer
        product_id:
          type: integer
        gas_type_id:
          type: integer
        name:
          type: string
        code:
          type: string
        branch_number:
          type: string
        internal_code:
          type: string
        price_amount:
          type: string
        price_currency:
          type: string
        maker_price_for_retail_amount:
          type: string
        maker_price_for_retail_currency:
          type: string
        subtotal_excluding_tax:
          type: string
        estimated_delivery_duration:
          type: string
        shipping_status:
          type: string
          enum:
            - undelivered
            - delivered
        delivery_date:
          type: string
          format: date
        number_of_items:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - orders_maker_id
        - product_id
        - name
        - code
    Order:
      title: Order
      type: object
      description: ''
      x-tags:
        - Orders
      x-examples:
        example-1: {}
      properties:
        id:
          type: string
        retail_id:
          type: integer
        retail_sales_office_id:
          type: integer
        retail_user_id:
          type: integer
        code:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        desired_delivery_date:
          type: string
          format: date
        ordered_at:
          type: string
          format: date-time
      required:
        - id
        - retail_id
        - retail_sales_office_id
        - retail_user_id
        - code
    RetailBranch:
      title: RetailBranch
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - code
        - name
    RetailSalesOffice:
      title: RetailSalesOffice
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        postcode:
          type: string
        prefecture:
          type: string
        city:
          type: string
        street_address:
          type: string
        tel:
          type: string
        fax:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    RetailUser:
      title: RetailUser
      type: object
      description: ''
      properties:
        id:
          type: integer
        code:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum:
            - admin
            - clerk
            - sales
        last_name:
          type: string
        first_name:
          type: string
        last_name_kane:
          type: string
        first_name_kana:
          type: string
        tel:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Retail:
      title: Retail
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - code
    OrderMaker:
      title: OrderMaker
      type: object
      properties:
        id:
          type: integer
        maker_id:
          type: integer
        maker_user_id:
          type: integer
        maker_sales_office_id:
          type: integer
        code:
          type: string
        status:
          type: string
          enum:
            - ordered
            - downloaded
            - answered
            - shipped
            - delivered
            - canceled
        estimated_delivery_date:
          type: string
        official_estimated_delivery_date:
          type: string
          format: date
        answered_at:
          type: string
          format: date-time
        delivery_date:
          type: string
        shipping_postcode:
          type: string
        shipping_prefecture_code:
          type: string
        shipping_city:
          type: string
        shipping_street_address:
          type: string
        shipping_building:
          type: string
        shipping_office_name:
          type: string
        shipping_tel:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - maker_id
  securitySchemes:
    API Key:
      type: http
      scheme: Bearer
      description: API key acquired on retail management page by admin.
